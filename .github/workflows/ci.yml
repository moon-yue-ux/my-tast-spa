name: CI
run-name: "CI • ${{ github.ref_name }}"

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

# 同一分支重复推送时，取消排队中的旧任务，节省 CI 分钟
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  unit:
    name: Unit Tests (Jest)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4     # 拉代码

      - name: Setup Node
        uses: actions/setup-node@v4   # 装 Node，并启用 pnpm 缓存
        with:
          node-version: '20'
          cache: 'pnpm'               # 关键：使用 pnpm 缓存
          cache-dependency-path: |
            pnpm-lock.yaml            # 指定锁文件（单包即可；monorepo 就多列几行）

      - name: Enable corepack (use packageManager)
        run: corepack enable          # 让 Node 按 package.json 的 packageManager 安装 pnpm

      - name: Show pnpm version
        run: pnpm -v                  # 仅用于日志确认版本，非必需

      - name: Install deps
        run: pnpm install --frozen-lockfile  # 严格按锁文件安装，等价 npm ci

      - name: Lint (optional but recommended)
        run: pnpm run lint

      - name: Unit tests
        run: pnpm run test:unit

      - name: Upload Jest coverage & report
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: jest-coverage-and-report
          path: |
            coverage/**
            docs/jest-stare/**
          if-no-files-found: ignore

  e2e:
    name: E2E (Cypress)
    runs-on: ubuntu-latest
    needs: unit                       # 单测先过，再跑 e2e

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: |
            pnpm-lock.yaml

      - name: Enable corepack (use packageManager)
        run: corepack enable

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build app
        run: pnpm run build           # 你脚本里把 build 指到 webpack 生产构建

      - name: Run Cypress
        uses: cypress-io/github-action@v6
        with:
          start: pnpm run start:prod  # http-server 启 dist
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          command: pnpm run test:e2e:ci
          browser: chrome
          headed: false
        env:
          CYPRESS_baseUrl: http://localhost:3000

      - name: Upload Cypress artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/videos/**
            cypress/screenshots/**
          if-no-files-found: ignore
